package net.innectis.innplugin.system.shop;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;
import net.innectis.innplugin.InnPlugin;
import net.innectis.innplugin.handlers.datasource.DBManager;
import net.innectis.innplugin.objects.owned.InnectisLot;

/**
 * This class contains details about a chest shop lot
 *
 * @author AlphaBlend
 */
public class ChestShopLotDetails {

    private int id;
    private InnectisLot lot;
    private String name;

    public ChestShopLotDetails(InnectisLot lot, String name) {
        this(0, lot, name);
    }

    public ChestShopLotDetails(int id, InnectisLot lot, String name) {
        this.id = id;
        this.lot = lot;
        this.name = name;
    }

    /**
     * Gets the ID of this chest shop lot
     * @return
     */
    public int getId() {
        return id;
    }

    /**
     * Gets the chest shop lot
     * @return
     */
    public InnectisLot getLot() {
        return lot;
    }

    /**
     * Gets the name of this chest shop lot
     * @return
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the name of this chest shop lot
     * @param name
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Saves this chest shop listing
     */
    public void save() {
        PreparedStatement statement = null;
        ResultSet set = null;

        try {
            if (id > 0) {
                statement = DBManager.prepareStatement("UPDATE chest_shop_list SET name = ? WHERE id = ?;");
                statement.setString(1, name);
                statement.setInt(2, id);
                statement.executeUpdate();
            } else {
                statement = DBManager.prepareStatementWithAutoGeneratedKeys("INSERT INTO chest_shop_list (lotid, name) VALUES (?, ?);");
                statement.setInt(1, lot.getId());
                statement.setString(2, name);
                statement.execute();
                set = statement.getGeneratedKeys();

                if (set.next()) {
                    id = set.getInt(1);
                }
            }
        } catch (SQLException ex) {
            InnPlugin.logError("Unable to " + (id > 0 ? "update" : "save") + " chest shop listing!", ex);
        } finally {
            DBManager.closePreparedStatement(statement);
            DBManager.closeResultSet(set);
        }
    }

    /**
     * Deletes this chest shop listing
     */
    public void delete() {
        PreparedStatement statement = null;

        try {
            statement = DBManager.prepareStatement("DELETE FROM chest_shop_list WHERE id = ?;");
            statement.setInt(1, id);
            statement.execute();
        } catch (SQLException ex) {
            InnPlugin.logError("Unable to delete chest shop listing!", ex);
        } finally {
            DBManager.closePreparedStatement(statement);
        }
    }

}
