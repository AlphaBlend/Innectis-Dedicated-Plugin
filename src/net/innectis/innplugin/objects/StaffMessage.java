package net.innectis.innplugin.objects;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import net.innectis.innplugin.handlers.datasource.DBManager;
import net.innectis.innplugin.InnPlugin;
import net.innectis.innplugin.player.PlayerCredentials;

/**
 * A simple message for staff members to read
 *
 * @author AlphaBlend
 */
public class StaffMessage extends Message {

    /**
     * Constructs a new staff message (no ID present)
     * @param date
     * @param creatorCredentials
     * @param message
     */
    public StaffMessage(Date date, PlayerCredentials creatorCredentials, String message) {
        this(0, date, false, creatorCredentials, message);
    }

    /**
     * Constructs a staff message from the given parameters
     * @param id
     * @param date
     * @param read
     * @param creatorCredentials
     * @param message
     */
    public StaffMessage(int id, Date date, boolean read, PlayerCredentials creatorCredentials, String message) {
        super(id, date, read, creatorCredentials, message);
    }

    /**
     * Saves this staff request
     */
    @Override
    public void save() {
        PreparedStatement statement = null;
        ResultSet set = null;

        try {
            if (id > 0) {
                statement = DBManager.prepareStatement("UPDATE staff_requests SET hasread = ? WHERE id = ?");
                statement.setBoolean(1, read);
                statement.setInt(2, id);
                statement.executeUpdate();
            } else {
                statement = DBManager.prepareStatementWithAutoGeneratedKeys("INSERT INTO staff_requests (datecreated, hasread, creator_id, message) VALUES (?, ?, ?, ?)");
                statement.setDate(1, new java.sql.Date(date.getTime()));
                statement.setBoolean(2, read);
                statement.setString(3, super.getCreatorCredentials().getUniqueId().toString());
                statement.setString(4, message);
                statement.execute();

                set = statement.getGeneratedKeys();

                if (set.next()) {
                    id = set.getInt(1);
                }
            }
        } catch (SQLException ex) {
            InnPlugin.logError("Unable to save staff message!", ex);
        } finally {
            DBManager.closeResultSet(set);
            DBManager.closePreparedStatement(statement);
        }
    }

    /**
     * Deletes this staff request
     */
    @Override
    public void delete() {
        PreparedStatement statement = null;

        try {
            statement = DBManager.prepareStatement("DELETE FROM staff_requests WHERE id = ?");
            statement.setInt(1, id);
            statement.execute();
        } catch (SQLException ex) {
            InnPlugin.logError("Unable to delete staff request!", ex);
        } finally {
            DBManager.closePreparedStatement(statement);
        }
    }

}
