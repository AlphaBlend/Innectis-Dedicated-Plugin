package net.innectis.innplugin.system.mail;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import net.innectis.innplugin.handlers.datasource.DBManager;
import net.innectis.innplugin.InnPlugin;
import net.innectis.innplugin.objects.Message;
import net.innectis.innplugin.player.PlayerCredentials;

/**
 * Contains a single mail entry for a player
 *
 * @author AlphaBlend
 */
public class MailMessage extends Message {

    private PlayerCredentials fromPlayerCredentials;
    private String title;

    /**
     * Sets up a mail object for a new message
     *
     * @param date
     * @param fromCredentials
     * @param toPlayerCredentials
     * @param title
     * @param message
     */
    public MailMessage(Date date, PlayerCredentials fromCredentials, PlayerCredentials toPlayerCredentials, String title, String message) {
        this(0, date, false, fromCredentials, toPlayerCredentials, title, message);
    }

    /**
     * Sets up the mail object
     *
     * @param ID
     * @param date
     * @param read
     * @param fromPlayerCredentials
     * @param toPlayerCredentials
     * @param title
     * @param message
     */
    public MailMessage(int ID, Date date, boolean read, PlayerCredentials fromPlayerCredentials, PlayerCredentials toPlayerCredentials, String title, String message) {
        super(ID, date, read, fromPlayerCredentials, message);

        this.fromPlayerCredentials = toPlayerCredentials;
        this.title = title;
    }

    /**
     * Gets the title of this message
     * @return
     */
    public String getTitle() {
        return title;
    }

    /**
     * Saves this mail message
     */
    @Override
    public void save() {
        PreparedStatement statement = null;
        ResultSet set = null;

        try {
            if (id > 0) {
                statement = DBManager.prepareStatement("UPDATE playermail set readmail = ? WHERE id = ?");
                statement.setBoolean(1, read);
                statement.setInt(2, id);
                statement.executeUpdate();
            } else {
                statement = DBManager.prepareStatementWithAutoGeneratedKeys("INSERT INTO playermail (datecreated, readmail, to_player_id, from_player_id, title, content) VALUES (?, ?, ?, ?, ?, ?)");
                statement.setDate(1, new java.sql.Date(date.getTime()));
                statement.setBoolean(2, read);
                statement.setString(3, fromPlayerCredentials.getUniqueId().toString());
                statement.setString(4, creatorCredentials.getUniqueId().toString());
                statement.setString(5, title);
                statement.setString(6, message);
                statement.execute();
                set = statement.getGeneratedKeys();

                if (set.next()) {
                    id = set.getInt(1);
                }
            }
        } catch (SQLException ex) {
            InnPlugin.logError("Unable to save mail message!", ex);
        } finally {
            DBManager.closeResultSet(set);
            DBManager.closePreparedStatement(statement);
        }
    }

    /**
     * Deletes this mail message
     */
    @Override
    public void delete() {
        PreparedStatement statement = null;

        try {
            statement = DBManager.prepareStatement("DELETE FROM playermail WHERE id = ?");
            statement.setInt(1, id);
            statement.execute();
        } catch (SQLException ex) {
            InnPlugin.logError("Unable to delete mail messasge!", ex);
        } finally {
            DBManager.closePreparedStatement(statement);
        }
    }
    
}
